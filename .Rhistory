df2 <- data.frame(winloss2)
return(df)
return(df2)
}
winloss("Sunrisers Hyderabad", 2017)
winloss <- function(team_name, year) {
'%!in%' <- Negate(`%in%`)
IPL_matches$date <- as.Date(IPL_matches$date, tryFormats = c("%Y-%m-%d"))
IPL_matches$years <- as.numeric(format(IPL_matches$date, "%Y"))
if (!is.character(team_name)) {
stop("Invalid input: team name input should be a character vector")
} else if (!is.numeric(year)) {
stop("Invalid input: year input should be a numeric vector")
} else if (year > 2020 | year < 2008) {
stop("Invalid year")
} else if (team_name %!in% IPL_matches$team1 | team_name %!in% IPL_matches$team2) {
stop("Invalid team name")
}
# winloss1 <- IPL_matches %>%
#   dplyr::filter(
#     years == year,
#     team1 == team_name | team2 == team_name
#   ) %>%
#   group_by(toss_decision) %>%
#   summarize(
#     wins = sum(winner == team_name),
#     losses = sum(winner != team_name),
#     wpct = wins / (wins + losses),
#     .groups = 'drop'
#   )
winloss2 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
batsman == player,
year == yr
) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
# df <- data.frame(winloss1)
df2 <- data.frame(winloss2)
# return(df)
return(df2)
}
winloss("Sunrisers Hyderabad", 2017)
winloss <- function(team_name, year) {
'%!in%' <- Negate(`%in%`)
IPL_matches$date <- as.Date(IPL_matches$date, tryFormats = c("%Y-%m-%d"))
IPL_matches$years <- as.numeric(format(IPL_matches$date, "%Y"))
if (!is.character(team_name)) {
stop("Invalid input: team name input should be a character vector")
} else if (!is.numeric(year)) {
stop("Invalid input: year input should be a numeric vector")
} else if (year > 2020 | year < 2008) {
stop("Invalid year")
} else if (team_name %!in% IPL_matches$team1 | team_name %!in% IPL_matches$team2) {
stop("Invalid team name")
}
winloss1 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
group_by(toss_decision) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
winloss2 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
df <- data.frame(winloss1)
df2 <- data.frame(winloss2)
return(df)
return(df2)
}
winloss("Sunrisers Hyderabad", 2017)
winloss <- function(team_name, year) {
'%!in%' <- Negate(`%in%`)
IPL_matches$date <- as.Date(IPL_matches$date, tryFormats = c("%Y-%m-%d"))
IPL_matches$years <- as.numeric(format(IPL_matches$date, "%Y"))
if (!is.character(team_name)) {
stop("Invalid input: team name input should be a character vector")
} else if (!is.numeric(year)) {
stop("Invalid input: year input should be a numeric vector")
} else if (year > 2020 | year < 2008) {
stop("Invalid year")
} else if (team_name %!in% IPL_matches$team1 | team_name %!in% IPL_matches$team2) {
stop("Invalid team name")
}
winloss1 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
group_by(toss_decision) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
winloss2 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
df <- data.frame(winloss1)
df2 <- data.frame(winloss2)
return(df2)
return(df)
}
winloss("Sunrisers Hyderabad", 2017)
winloss <- function(team_name, year) {
'%!in%' <- Negate(`%in%`)
IPL_matches$date <- as.Date(IPL_matches$date, tryFormats = c("%Y-%m-%d"))
IPL_matches$years <- as.numeric(format(IPL_matches$date, "%Y"))
if (!is.character(team_name)) {
stop("Invalid input: team name input should be a character vector")
} else if (!is.numeric(year)) {
stop("Invalid input: year input should be a numeric vector")
} else if (year > 2020 | year < 2008) {
stop("Invalid year")
} else if (team_name %!in% IPL_matches$team1 | team_name %!in% IPL_matches$team2) {
stop("Invalid team name")
}
winloss1 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
group_by(toss_decision) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
winloss2 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
df <- data.frame(winloss1)
df2 <- data.frame(winloss2)
print(df2)
print(df)
}
winloss("Sunrisers Hyderabad", 2017)
winloss <- function(team_name, year) {
'%!in%' <- Negate(`%in%`)
IPL_matches$date <- as.Date(IPL_matches$date, tryFormats = c("%Y-%m-%d"))
IPL_matches$years <- as.numeric(format(IPL_matches$date, "%Y"))
if (!is.character(team_name)) {
stop("Invalid input: team name input should be a character vector")
} else if (!is.numeric(year)) {
stop("Invalid input: year input should be a numeric vector")
} else if (year > 2020 | year < 2008) {
stop("Invalid year")
} else if (team_name %!in% IPL_matches$team1 | team_name %!in% IPL_matches$team2) {
stop("Invalid team name")
}
winloss1 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
group_by(toss_decision) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
winloss2 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
start.df <- data.frame(winloss1)
totals.df <- data.frame(winloss2)
print(totals.df)
print(start.dfdf)
}
winloss("Sunrisers Hyderabad", 2017)
winloss <- function(team_name, year) {
'%!in%' <- Negate(`%in%`)
IPL_matches$date <- as.Date(IPL_matches$date, tryFormats = c("%Y-%m-%d"))
IPL_matches$years <- as.numeric(format(IPL_matches$date, "%Y"))
if (!is.character(team_name)) {
stop("Invalid input: team name input should be a character vector")
} else if (!is.numeric(year)) {
stop("Invalid input: year input should be a numeric vector")
} else if (year > 2020 | year < 2008) {
stop("Invalid year")
} else if (team_name %!in% IPL_matches$team1 | team_name %!in% IPL_matches$team2) {
stop("Invalid team name")
}
winloss1 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
group_by(toss_decision) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
winloss2 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
start.df <- data.frame(winloss1)
totals.df <- data.frame(winloss2)
print(totals.df)
print(start.df)
}
winloss("Sunrisers Hyderabad", 2017)
winloss <- function(team_name, year) {
'%!in%' <- Negate(`%in%`)
IPL_matches$date <- as.Date(IPL_matches$date, tryFormats = c("%Y-%m-%d"))
IPL_matches$years <- as.numeric(format(IPL_matches$date, "%Y"))
if (!is.character(team_name)) {
stop("Invalid input: team name input should be a character vector")
} else if (!is.numeric(year)) {
stop("Invalid input: year input should be a numeric vector")
} else if (year > 2020 | year < 2008) {
stop("Invalid year")
} else if (team_name %!in% IPL_matches$team1 | team_name %!in% IPL_matches$team2) {
stop("Invalid team name")
}
winloss1 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
group_by(toss_decision) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
winloss2 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
start.df <- data.frame(winloss1)
totals.df <- data.frame(winloss2)
df = merge(start.df, totals.df, by = c("wins", "losses", "wpct"))
return(df)
# print(totals.df)
# print(start.df)
}
winloss("Sunrisers Hyderabad", 2017)
winloss <- function(team_name, year) {
'%!in%' <- Negate(`%in%`)
IPL_matches$date <- as.Date(IPL_matches$date, tryFormats = c("%Y-%m-%d"))
IPL_matches$years <- as.numeric(format(IPL_matches$date, "%Y"))
if (!is.character(team_name)) {
stop("Invalid input: team name input should be a character vector")
} else if (!is.numeric(year)) {
stop("Invalid input: year input should be a numeric vector")
} else if (year > 2020 | year < 2008) {
stop("Invalid year")
} else if (team_name %!in% IPL_matches$team1 | team_name %!in% IPL_matches$team2) {
stop("Invalid team name")
}
winloss1 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
group_by(toss_decision) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
winloss2 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
start.df <- data.frame(winloss1)
totals.df <- data.frame(winloss2)
df <- rbind(start.df, totals.df)
return(df)
# print(totals.df)
# print(start.df)
}
winloss("Sunrisers Hyderabad", 2017)
winloss <- function(team_name, year) {
'%!in%' <- Negate(`%in%`)
IPL_matches$date <- as.Date(IPL_matches$date, tryFormats = c("%Y-%m-%d"))
IPL_matches$years <- as.numeric(format(IPL_matches$date, "%Y"))
if (!is.character(team_name)) {
stop("Invalid input: team name input should be a character vector")
} else if (!is.numeric(year)) {
stop("Invalid input: year input should be a numeric vector")
} else if (year > 2020 | year < 2008) {
stop("Invalid year")
} else if (team_name %!in% IPL_matches$team1 | team_name %!in% IPL_matches$team2) {
stop("Invalid team name")
}
winloss1 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
group_by(toss_decision) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
winloss2 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
summarize(
total = "total"
wins = sum(winner == team_name),
winloss <- function(team_name, year) {
'%!in%' <- Negate(`%in%`)
IPL_matches$date <- as.Date(IPL_matches$date, tryFormats = c("%Y-%m-%d"))
IPL_matches$years <- as.numeric(format(IPL_matches$date, "%Y"))
if (!is.character(team_name)) {
stop("Invalid input: team name input should be a character vector")
} else if (!is.numeric(year)) {
stop("Invalid input: year input should be a numeric vector")
} else if (year > 2020 | year < 2008) {
stop("Invalid year")
} else if (team_name %!in% IPL_matches$team1 | team_name %!in% IPL_matches$team2) {
stop("Invalid team name")
}
winloss1 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
group_by(toss_decision) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
winloss2 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
summarize(
total = "total",
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
start.df <- data.frame(winloss1)
totals.df <- data.frame(winloss2)
df <- rbind(start.df, totals.df)
return(df)
# print(totals.df)
# print(start.df)
}
winloss("Sunrisers Hyderabad", 2017)
winloss <- function(team_name, year) {
'%!in%' <- Negate(`%in%`)
IPL_matches$date <- as.Date(IPL_matches$date, tryFormats = c("%Y-%m-%d"))
IPL_matches$years <- as.numeric(format(IPL_matches$date, "%Y"))
if (!is.character(team_name)) {
stop("Invalid input: team name input should be a character vector")
} else if (!is.numeric(year)) {
stop("Invalid input: year input should be a numeric vector")
} else if (year > 2020 | year < 2008) {
stop("Invalid year")
} else if (team_name %!in% IPL_matches$team1 | team_name %!in% IPL_matches$team2) {
stop("Invalid team name")
}
winloss1 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
group_by(toss_decision) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
winloss2 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
summarize(
toss_decision = "total"
wins = sum(winner == team_name),
winloss <- function(team_name, year) {
'%!in%' <- Negate(`%in%`)
IPL_matches$date <- as.Date(IPL_matches$date, tryFormats = c("%Y-%m-%d"))
IPL_matches$years <- as.numeric(format(IPL_matches$date, "%Y"))
if (!is.character(team_name)) {
stop("Invalid input: team name input should be a character vector")
} else if (!is.numeric(year)) {
stop("Invalid input: year input should be a numeric vector")
} else if (year > 2020 | year < 2008) {
stop("Invalid year")
} else if (team_name %!in% IPL_matches$team1 | team_name %!in% IPL_matches$team2) {
stop("Invalid team name")
}
winloss1 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
group_by(toss_decision) %>%
summarize(
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
winloss2 <- IPL_matches %>%
dplyr::filter(
years == year,
team1 == team_name | team2 == team_name
) %>%
summarize(
toss_decision = "total",
wins = sum(winner == team_name),
losses = sum(winner != team_name),
wpct = wins / (wins + losses),
.groups = 'drop'
)
start.df <- data.frame(winloss1)
totals.df <- data.frame(winloss2)
df <- rbind(start.df, totals.df)
return(df)
# print(totals.df)
# print(start.df)
}
winloss("Sunrisers Hyderabad", 2017)
load("~/Desktop/ipl/data/ipl.rda")
View(ipl)
library(ipl)
library(ipl)
library(ipl)
library(ipl)
library(ipl)
library(ipl)
library(ipl)
load("~/Desktop/ipl/data/bowlers_100.rda")
View(bowlers)
## Clean the Bowlers data
bowlers <- read_csv("data-raw/bowlers.csv")
library(tidyverse)
## Clean the Bowlers data
bowlers <- read_csv("data-raw/bowlers.csv")
bowlers$PLAYER <- trimws(gsub("[^[:alnum:]]", " ", bowlers$PLAYER))
bowlers %>%
janitor::clean_names()
bowler_score("Rahul Sharma")
cents_halfcents("V Kohli", 2016)
expect_equal(154.4, overs("Rahul Sharma"))
expect_equal(154.4, overs("Rahul Sharma"))
context("overs")
library(tibble)
library(dplyr)
library(dplyr)
load("/Volumes/GoogleDrive/My Drive/Smith College/Senior Year/ipl/data/bowlers.rda")
bowlers
source('/Volumes/GoogleDrive/My Drive/Smith College/Senior Year/ipl/tests/testthat/test_bowler_summary.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/Smith College/Senior Year/ipl/tests/testthat/test_bowler_summary.R', echo=TRUE)

